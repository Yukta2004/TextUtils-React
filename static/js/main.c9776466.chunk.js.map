{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"mMAIe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAA,OACEC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OAEpEJ,IAAAC,cAAA,OAAKC,UAAU,mBAEbF,IAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BN,EAAMO,OAETN,IAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXZ,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cb,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,UAoBhEL,IAAAC,cAAA,OACEC,UAAS,+BAAAC,OACQ,UAAfJ,EAAMK,KAAmB,OAAS,UAGpCJ,IAAAC,cAAA,SACEC,UAAU,mBACVa,QAAShB,EAAMiB,WACfT,KAAK,WACLM,GAAG,2BAELb,IAAAC,cAAA,SACEC,UAAU,mBACVe,QAAQ,0BACT,uBC5DE,SAASC,EAASnB,GACjC,IAwCCoB,EAEuBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAGlB,OACErB,IAAAC,cAAAD,IAAAyB,SAAA,KAEAzB,IAAAC,cAAA,OAAKC,UAAU,YAAYwB,MAAO,CAACC,MAAmB,SAAb5B,EAAMK,KAAc,QAAQ,UACnEJ,IAAAC,cAAA,UAAMF,EAAM6B,QAAQ,KACpB5B,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,YAAUC,UAAU,eAAe2B,MAAON,EAAMO,SAfjC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAa0DH,MAAO,CAACO,gBAA6B,SAAblC,EAAMK,KAAc,OAAO,QAAQuB,MAAmB,SAAb5B,EAAMK,KAAc,QAAQ,SAAUS,GAAG,QAAQqB,KAAK,OAEpMlC,IAAAC,cAAA,UAAQC,UAAU,uBAAwBa,QArD3B,WACnB,IAAIoB,EAAUZ,EAAKa,cAEjBZ,EAAQW,GACRpC,EAAMsC,UAAU,0BAA2B,aAiDyB,wBAClErC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QA/C1B,WACjB,IAAIoB,EAAUZ,EAAKe,cACnBd,EAAQW,GACRpC,EAAMsC,UAAU,0BAA2B,aA4CwB,wBACjErC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QA3CvB,WAEtBS,EADc,KAEdzB,EAAMsC,UAAU,kBAAmB,aAwCqC,eACpErC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAvC7B,WAChB,IAAIQ,EAAOgB,SAASC,eAAe,SACnCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKM,OACnC9B,EAAMsC,UAAU,sBAAuB,aAmC2B,YAE9DrC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAlCrB,WACxB,IAAIoB,EAAUZ,EAAKsB,MAAM,QACzBrB,EAAQW,EAAQW,KAAK,MACrB/C,EAAMsC,UAAU,uBAAwB,aA+BiC,uBAIvErC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBwB,MAAO,CAACC,MAAmB,SAAb5B,EAAMK,KAAc,QAAQ,UACtEJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAIsB,EAAKsB,MAAM,KAAKE,OAAO,QAAMxB,EAAKwB,OAAO,eAC7C/C,IAAAC,cAAA,SAAI,KAAQsB,EAAKsB,MAAM,KAAKE,OAAO,iBACnC/C,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAIsB,EAAKwB,OAAO,EAAExB,EAAK,8DDO/BzB,EAAOkD,aAAe,CACpB1C,MAAO,iBACP2C,UAAW,YE5DEC,MAjBf,SAAenD,GAKb,OACEA,EAAMoD,OACJnD,IAAAC,cAAA,OACEC,UAAS,eAAAC,OAAiBJ,EAAMoD,MAAM5C,KAAI,gCAC1C6C,KAAK,SAELpD,IAAAC,cAAA,cAVa,SAACoD,GAClB,IAAMC,EAAQD,EAAKf,cACnB,OAAOgB,EAAMC,OAAO,GAAGnB,cAAgBkB,EAAME,MAAM,GAQtCC,CAAW1D,EAAMoD,MAAM5C,OAAe,IAAER,EAAMoD,MAAMO,MCsDtDC,MA3Df,WAAe,IAAAxC,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlCf,EAAIiB,EAAA,GAAEuC,EAAOvC,EAAA,GAAuBwC,EACjBzC,mBAAS,MAAK0C,EAAAxC,YAAAuC,EAAA,GAAjCV,EAAKW,EAAA,GAAEC,EAAQD,EAAA,GAEhBzB,EAAY,SAAC2B,EAASzD,GAC1BwD,EAAS,CACPL,IAAKM,EACLzD,KAAMA,IAER0D,WAAW,WACTF,EAAS,OACR,OAsBL,OACE/D,IAAAC,cAAAD,IAAAyB,SAAA,KAKGzB,IAAAC,cAACH,EAAM,CAACQ,MAAM,YAAYF,KAAMA,EAAMY,WAzBxB,WACJ,UAATZ,GACFwD,EAAQ,QACRrB,SAAS2B,KAAKxC,MAAMO,gBAAkB,UACtCI,EAAU,6BAA8B,WACxCE,SAASjC,MAAQ,0BAQjBsD,EAAQ,SACRrB,SAAS2B,KAAKxC,MAAMO,gBAAkB,QACtCI,EAAU,8BAA+B,WACzCE,SAASjC,MAAQ,4BAUjBN,IAAAC,cAACiD,EAAK,CAACC,MAAOA,IACdnD,IAAAC,cAAA,OAAKC,UAAU,kBAIbF,IAAAC,cAACiB,EAAQ,CACPU,QAAQ,kCACRxB,KAAMA,EACNiC,UAAWA,OC5CN8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW1C,SAASC,eAAe,SACpD0C,OACHlF,IAAAC,cAACD,IAAMmF,WAAU,KACfnF,IAAAC,cAAC0D,EAAG,QAORQ","file":"static/js/main.c9776466.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link></li> */}\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"About Us\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\nconst handleUpClick =()=>{\r\n  let newText = text.toUpperCase();\r\n  // console.log(\"Uppercase was clicked \" + text);\r\n    setText(newText);\r\n    props.showAlert(\"converted to uppercase!\", \"success\");\r\n}\r\n\r\nconst handleLoClick =()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lowercase!\", \"success\");\r\n}\r\nconst handleClearClick =()=>{\r\n  let newText = ' ';\r\n  setText(newText);\r\n  props.showAlert(\"Screen is clear\", \"success\");\r\n}\r\nconst handleCopy =()=>{\r\n  var text = document.getElementById(\"myBox\");\r\n  text.select();\r\n  navigator.clipboard.writeText(text.value);\r\n  props.showAlert(\"Copy to Clipboard !\", \"success\");\r\n}\r\n\r\nconst handleExtraSpaces = ()=>{\r\n  let newText = text.split(/[ ]+/);\r\n  setText(newText.join(\" \"))\r\n  props.showAlert(\"Extra spaces removed\", \"success\");\r\n}\r\n \r\n// const handlecapitalize = ()=>{\r\n//   let toLowerCase;\r\n//   const lower = toLowerCase();\r\n//   return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n// }\r\n\r\nconst hanndleOnChange =(event)=>{\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n\r\n}\r\n\r\nconst [text, setText] = useState('');\r\n    // text = \"new text\";        wrong way to change the state\r\n    // setText(\"new text\");    Correct way to change the state\r\n  return (\r\n    <>\r\n\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1 >{props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={hanndleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\"  onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text </button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>CopyText</button>\r\n      {/* <button className=\"btn btn-primary mx-2\" onClick={handlecapitalize}>Capitalize First Word</button> */}\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n    </div>\r\n    \r\n    \r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the above textbox to preview it here \" }</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Textform from \"./Components/Textform\";\r\n// import About from \"./Components/About\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./Components/Alert\";\r\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n      document.title = \"TextUtils - Dark Mode\";\r\n      // setInterval(() => {\r\n      //   document.title = \" TextUtils is nice\";\r\n      // }, 2000);\r\n      // setInterval(() => {\r\n      //   document.title = \"Install TextUtils now\";\r\n      // }, 1500);\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n      document.title = \"TextUtils - Dark Mode\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\r\n      {/* <Navbar /> */}\r\n\r\n      {/* <Router> */}\r\n      {<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />}\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* <Routes> */}\r\n        {/* <Route exact path=\"/about\" element={<About />}></Route> */}\r\n        {/* <Route exact path=\"/\"  element={  */}\r\n        <Textform\r\n          heading=\"Enter the text to analyze below\"\r\n          mode={mode}\r\n          showAlert={showAlert}\r\n        />\r\n        {/* } */}\r\n        {/*  ></Route> */}\r\n        {/* </Routes> */}\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}